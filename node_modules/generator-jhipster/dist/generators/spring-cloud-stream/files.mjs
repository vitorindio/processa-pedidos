import { SERVER_MAIN_SRC_DIR, SERVER_TEST_SRC_DIR } from '../generator-constants.mjs';
import { moveToJavaPackageSrcDir, moveToJavaPackageTestDir } from '../server/support/index.mjs';
export const kafkaFiles = {
    config: [
        {
            condition: data => data.buildToolGradle,
            templates: ['gradle/kafka.gradle'],
        },
        {
            path: `${SERVER_MAIN_SRC_DIR}package/`,
            renameTo: moveToJavaPackageSrcDir,
            templates: [data => `broker/KafkaConsumer_${data.imperativeOrReactive}.java`, 'broker/KafkaProducer.java'],
        },
    ],
    resources: [
        {
            path: `${SERVER_MAIN_SRC_DIR}package/`,
            to: moveToJavaPackageSrcDir,
            templates: [
                {
                    sourceFile: data => `web/rest/KafkaResource_${data.imperativeOrReactive}.java`,
                    destinationFile: data => `web/rest/${data.upperFirstCamelCaseBaseName}KafkaResource.java`,
                },
            ],
        },
    ],
    test: [
        {
            path: `${SERVER_TEST_SRC_DIR}package/`,
            renameTo: moveToJavaPackageTestDir,
            templates: [
                'config/KafkaTestContainer.java',
                'config/EmbeddedKafka.java',
                'config/KafkaTestContainersSpringContextCustomizerFactory.java',
            ],
        },
        {
            path: `${SERVER_TEST_SRC_DIR}package/`,
            to: moveToJavaPackageTestDir,
            templates: [
                {
                    sourceFile: data => `web/rest/KafkaResourceIT_${data.imperativeOrReactive}.java`,
                    destinationFile: data => `web/rest/${data.upperFirstCamelCaseBaseName}KafkaResourceIT.java`,
                },
            ],
        },
    ],
};
export const pulsarFiles = {
    config: [
        {
            condition: data => data.buildToolGradle,
            templates: ['gradle/pulsar.gradle'],
        },
    ],
    test: [
        {
            path: `${SERVER_TEST_SRC_DIR}package/`,
            renameTo: moveToJavaPackageTestDir,
            templates: [
                'broker/PulsarIT.java',
                'config/BrokerConfiguration.java',
                'config/EmbeddedPulsar.java',
                'config/PulsarTestContainer.java',
                'config/PulsarTestContainersSpringContextCustomizerFactory.java',
            ],
        },
    ],
};
export default async function writeFilesTask({ application }) {
    if (application.messageBrokerKafka) {
        await this.writeFiles({
            sections: kafkaFiles,
            context: application,
        });
    }
    if (application.messageBrokerPulsar) {
        await this.writeFiles({
            sections: pulsarFiles,
            context: application,
        });
    }
}
