import { createNeedleCallback } from '../../base/support/needles.mjs';
import { joinCallbacks } from '../../base/support/write-files.mjs';
export function addRoute({ needle, route, pageTitle, modulePath, moduleName, }) {
    const routePath = `path: '${route}',`;
    // prettier-ignore
    const contentToAdd = `
    {
      ${routePath}${pageTitle ? `
      data: { pageTitle: '${pageTitle}' },` : ''}
      loadChildren: () => import('${modulePath}')${moduleName ? `.then(m => m.${moduleName})` : ''},
    },`;
    return createNeedleCallback({
        needle,
        contentToAdd,
        contentToCheck: routePath,
    });
}
export function addEntitiesRoute({ application, entities }) {
    const { enableTranslation } = application;
    return joinCallbacks(...entities.map(entity => {
        const { i18nKeyPrefix, entityClassPlural, entityFolderName, entityFileName, entityUrl } = entity;
        const pageTitle = enableTranslation ? `${i18nKeyPrefix}.home.title` : entityClassPlural;
        const modulePath = `./${entityFolderName}/${entityFileName}.routes`;
        return addRoute({
            needle: 'jhipster-needle-add-entity-route',
            route: entityUrl,
            modulePath,
            pageTitle,
        });
    }));
}
export function addToEntitiesMenu({ application, entities }) {
    const { enableTranslation, jhiPrefix } = application;
    return joinCallbacks(...entities.map(entity => {
        const { entityPage, entityTranslationKeyMenu, entityClassHumanized } = entity;
        const routerLink = `routerLink="/${entityPage}"`;
        // prettier-ignore
        const contentToAdd = `
        <li>
          <a class="dropdown-item" ${routerLink} routerLinkActive="active" [routerLinkActiveOptions]="{ exact: true }" (click)="collapseNavbar()">
            <fa-icon icon="asterisk" [fixedWidth]="true"></fa-icon>
            <span${enableTranslation ? ` ${jhiPrefix}Translate="global.menu.entities.${entityTranslationKeyMenu}"` : ''}>${entityClassHumanized}</span>
          </a>
        </li>`;
        return createNeedleCallback({
            needle: 'jhipster-needle-add-entity-to-menu',
            contentToAdd,
            contentToCheck: routerLink,
        });
    }));
}
