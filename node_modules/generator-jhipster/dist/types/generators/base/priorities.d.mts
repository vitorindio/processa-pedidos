/**
 * Copyright 2013-2023 the original author or authors from the JHipster project.
 *
 * This file is part of the JHipster project, see https://www.jhipster.tech/
 * for more information.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export const PRIORITY_PREFIX: ">";
export const QUEUE_PREFIX: "jhipster:";
/**
 * Custom priorities to improve jhipster workflow.
 */
export const CUSTOM_PRIORITIES: ({
    priorityName: string;
    args: (generator: any) => any;
    edit: boolean;
    queueName?: undefined;
    before?: undefined;
} | {
    priorityName: string;
    queueName: string;
    before: string;
    args: (generator: any) => any;
    edit?: undefined;
} | {
    priorityName: string;
    queueName: string;
    before: string;
    args?: undefined;
    edit?: undefined;
})[];
export namespace PRIORITY_NAMES {
    export { INITIALIZING };
    export { PROMPTING };
    export { CONFIGURING };
    export { COMPOSING };
    export { LOADING };
    export { PREPARING };
    export { DEFAULT };
    export { WRITING };
    export { MULTISTEP_TRANSFORM };
    export { POST_WRITING };
    export { TRANSFORM };
    export { PRE_CONFLICTS };
    export { INSTALL };
    export { POST_INSTALL };
    export { END };
}
export const PRIORITY_NAMES_LIST: string[];
export namespace QUEUES {
    export { INITIALIZING as INITIALIZING_QUEUE };
    export { PROMPTING as PROMPTING_QUEUE };
    export { CONFIGURING as CONFIGURING_QUEUE };
    export { COMPOSING_QUEUE };
    export { LOADING_QUEUE };
    export { PREPARING_QUEUE };
    export { DEFAULT as DEFAULT_QUEUE };
    export { WRITING as WRITING_QUEUE };
    export { MULTISTEP_TRANSFORM_QUEUE };
    export { POST_WRITING_QUEUE };
    export { TRANSFORM as TRANSFORM_QUEUE };
    export { PRE_CONFLICTS_QUEUE };
    export { INSTALL as INSTALL_QUEUE };
    export { POST_INSTALL_QUEUE };
    export { END as END_QUEUE };
}
/** Yeoman priorities */
declare const INITIALIZING: "initializing";
declare const PROMPTING: "prompting";
declare const CONFIGURING: "configuring";
/** Custom priorities */
declare const COMPOSING: "composing";
declare const LOADING: "loading";
declare const PREPARING: "preparing";
declare const DEFAULT: "default";
declare const WRITING: "writing";
declare const MULTISTEP_TRANSFORM: "multistepTransform";
declare const POST_WRITING: "postWriting";
declare const TRANSFORM: "transform";
/** @private */
declare const PRE_CONFLICTS: "preConflicts";
declare const INSTALL: "install";
declare const POST_INSTALL: "postInstall";
declare const END: "end";
declare const COMPOSING_QUEUE: string;
declare const LOADING_QUEUE: string;
declare const PREPARING_QUEUE: string;
declare const MULTISTEP_TRANSFORM_QUEUE: string;
declare const POST_WRITING_QUEUE: string;
/** @private */
declare const PRE_CONFLICTS_QUEUE: string;
declare const POST_INSTALL_QUEUE: string;
export {};
