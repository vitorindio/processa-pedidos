/**
 * Copyright 2013-2023 the original author or authors from the JHipster project.
 *
 * This file is part of the JHipster project, see https://www.jhipster.tech/
 * for more information.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { XMLParser, XMLBuilder, XmlBuilderOptions, X2jOptions } from 'fast-xml-parser';
export default class XmlStorage {
    protected readonly saveFile: (string: any) => void;
    protected readonly loadFile: () => string;
    protected readonly parser: XMLParser;
    protected readonly builder: XMLBuilder;
    protected _cachedStore: any;
    constructor({ saveFile, loadFile, xmlParserOptions, xmlBuildOptions, }: {
        saveFile: (string: any) => void;
        loadFile: () => string;
        xmlParserOptions?: Partial<X2jOptions>;
        xmlBuildOptions?: Partial<XmlBuilderOptions>;
    });
    clearCache(): void;
    save(): void;
    protected sort(): void;
    protected persist(sort?: boolean): void;
    protected get store(): any;
    protected load(): void;
    protected merge(source: any): void;
    protected mergeContent<T>(existing: T, newContent?: string): T;
}
