import { createConflicterTransform, createYoResolveTransform, forceYoFiles } from '@yeoman/conflicter';
import createdLogger from 'debug';
import { create as createMemFsEditor } from 'mem-fs-editor';
// eslint-disable-next-line n/file-extension-in-import
import { isFilePending } from 'mem-fs-editor/state';
// eslint-disable-next-line n/file-extension-in-import
import { createCommitTransform } from 'mem-fs-editor/transform';
const debug = createdLogger('yeoman:environment:commit');
/**
 * Commits the MemFs to the disc.
 * @param {Stream} [stream] - files stream, defaults to this.sharedFs.stream().
 * @return {Promise}
 */
export const commitSharedFsTask = ({ adapter, conflicterOptions, sharedFs, stream, }) => {
    debug('Running commitSharedFsTask');
    const fs = createMemFsEditor(sharedFs);
    stream = stream ?? fs.store.stream({ filter: file => isFilePending(file) });
    return fs.commit([
        createYoResolveTransform(),
        forceYoFiles(),
        createConflicterTransform(adapter, conflicterOptions),
        // Use custom commit transform due to out of order transform.
        createCommitTransform(fs),
    ], stream);
};
